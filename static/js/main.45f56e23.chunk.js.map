{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.scss","components/GlobalStyles.jsx","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.scss"],"names":["module","exports","GlobalStyle","createGlobalStyle","Section","title","children","FeedbackOptions","options","onLeaveFeedback","console","log","map","key","type","feedbackRating","onClick","className","s","item","Statistics","total","positivePercentage","renderStatistics","points","point","Notification","message","App","state","good","neutral","bad","addFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,gC,gKCAZC,EAAcC,YAAH,sjB,OCeTC,MAbf,YAA4C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC7B,OACE,oCACGD,GAAS,6BAAKA,IACdC,M,iBCqCQC,MAxCf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAElC,OADAC,QAAQC,IAAI,UAAWH,GAErB,6BAgBGA,EAAQI,KAAI,SAACC,GAAD,OACX,6BACE,wBACEC,KAAK,SACLC,eAAgBF,EAChBG,QAAS,kBAAMP,EAAgBI,IAC/BI,UAAWC,IAAEC,KAJf,SAMGN,KAPIA,S,gBCrBF,SAASO,EAAT,GAIX,IAHFZ,EAGC,EAHDA,QAGC,IAFDa,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,gCACGC,EAAiBf,GAClB,oBAAGS,UAAWC,IAAEM,OAAhB,oBAAgCH,KAEhC,oBAAGJ,UAAWC,IAAEM,OAAhB,gCAA4CF,EAA5C,UAKN,SAASC,EAAiBf,GACxB,OAAOA,EAAQI,KAAI,SAACC,GAAD,OACjB,oBAAGI,UAAWC,IAAEO,MAAhB,UACGZ,EADH,KACUL,EAAQK,KADUA,MCnBjB,SAASa,EAAT,GAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACrD,OAAO,8BAAMA,I,ICMTC,E,4MACJC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCC,YAAc,SAACnB,GACb,EAAKoB,UAAS,SAACC,GAAD,sBAAmBrB,EAAOqB,EAAUrB,GAAQ,MAC1DJ,QAAQC,IAAI,CAACG,K,EAGfsB,mBAAqB,WAInB,MAA+B,EAAKP,MACpC,OADA,EAAQC,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBK,gCAAkC,WAChC,IAAMhB,EAAQ,EAAKe,qBACnB,OAAOf,EAAQ,EAAIiB,KAAKC,MAAO,EAAKV,MAAMC,KAAOT,EAAS,KAAO,G,4CAEnE,WAGE,IAAMb,EAAUgC,OAAOC,KAAKC,KAAKb,OAC3BR,EAAQqB,KAAKN,qBACnB,OACE,qCACE,cAAClC,EAAD,IACA,cAAC,EAAD,CAASG,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASA,EACTC,gBAAiBiC,KAAKT,gBAG1B,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACGgB,EAAQ,EACP,cAACD,EAAD,CAEEZ,QAASA,EACTa,MAAOA,EACPC,mBAAoBoB,KAAKL,oCAG3B,cAACX,EAAD,CAAcC,QAAQ,+B,GA5ChBgB,aAmDHf,ICtDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BhD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,6B","file":"static/js/main.45f56e23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOptions_item__15mKA\"};","import { createGlobalStyle } from 'styled-components';\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    scroll-behavior: smooth;\r\n\r\n  }\r\n\r\n  body {\r\n    font-family: Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI',\r\n      Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    background-color: #fff;\r\n    color: #010101;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    max-width: 100%;\r\n    \r\n  }\r\n\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6,\r\n  p {\r\n    margin: 0;\r\n  \r\n\r\n  }\r\n`;\r\n","// import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title = \"\", children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n\r\n// class Section extends Component {\r\n//   static defaultProps = { title: \"\" };\r\n//   static propTypes = {\r\n//     title: PropTypes.string,\r\n//   };\r\n\r\n//   render() {\r\n//     const title = this.props.title;\r\n//     return <section>{title && <h2>{title}</h2>}</section>;\r\n//   }\r\n// }\r\n\r\n// export default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.scss\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  console.log(\"options\", options); //options {good: 0, neutral: 0, bad: 0}\r\n  return (\r\n    <ul>\r\n      {/* Object.keys() возвращает массив из собственных перечисляемых свойств переданного объекта */}\r\n      {/* options - чьи собственные перечисляемые свойства будут возвращены */}\r\n      {/* {Object.keys(options).map((key) => (\r\n        <button\r\n          key={key}\r\n          type=\"button\"\r\n          className={s.item}\r\n          // при клике перезаписывает ко-во стейтов по каждому типу отдельно, основываясь на предыдущем ко-ве +1\r\n          onClick={() => {\r\n            onLeaveFeedback(key); //addFeedback\r\n          }}\r\n        >\r\n          {`${key}`}\r\n        </button>\r\n      ))} */}\r\n      {options.map((key) => (\r\n        <li key={key}>\r\n          <button\r\n            type=\"button\"\r\n            feedbackRating={key}\r\n            onClick={() => onLeaveFeedback(key)}\r\n            className={s.item}\r\n          >\r\n            {key}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.scss\";\r\n\r\nexport default function Statistics({\r\n  options,\r\n  total = 0,\r\n  positivePercentage = 0,\r\n}) {\r\n  return (\r\n    <div>\r\n      {renderStatistics(options)}\r\n      <p className={s.points}>Total: {total}</p>\r\n      {/* countPositiveFeedbackPercentage */}\r\n      <p className={s.points}>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction renderStatistics(options) {\r\n  return options.map((key) => (\r\n    <p className={s.point} key={key}>\r\n      {key}: {options[key]}\r\n    </p>\r\n  ));\r\n}\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nexport default function Notification({ message = \"\" }) {\r\n  return <div>{message}</div>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { GlobalStyle } from \"./components/GlobalStyles\";\n\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n  // фу-я которая плюсует по каждому типу стейта\n  addFeedback = (type) => {\n    this.setState((prevState) => ({ [type]: prevState[type] + 1 }));\n    console.log([type]); //['good']\n  };\n  // фу-я которая плюсует общее ко-во по все типах стейт, тотальное значение кликов по кнопках\n  countTotalFeedback = () => {\n    // Object.values возвращает массив значений перечисляемых свойств объекта\n    // reduce-возвращает сумму всех элементов в массиве.\n    // return Object.values(this.state).reduce((acc, value) => (acc += value), 0);\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  // фу-я соотношения хороших стейтов от ощего количества стейтов\n  //Math.round возвращает число, округлённое к ближайшему целому.\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return total > 0 ? Math.round((this.state.good / total) * 100) : 0;\n  };\n  render() {\n    /* Object.keys() возвращает массив из собственных перечисляемых свойств переданного объекта */\n    /* options - чьи собственные перечисляемые свойства будут возвращены */\n    const options = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    return (\n      <>\n        <GlobalStyle />\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              // options={this.state}\n              options={options}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"points\":\"Statistics_points__24Sj6\",\"point\":\"Statistics_point__14fzA\"};"],"sourceRoot":""}