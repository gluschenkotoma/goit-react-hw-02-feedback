{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","console","log","Object","keys","map","key","type","className","s","item","onClick","Statistics","total","positivePercentage","renderStatistics","points","point","Notification","message","App","state","good","neutral","bad","addFeedback","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAgBeA,MAbf,YAA4C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC7B,OACE,oCACGD,GAAS,6BAAKA,IACdC,M,gBCyBQC,MA5Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAElC,OADAC,QAAQC,IAAI,UAAWH,GAErB,8BAGGI,OAAOC,KAAKL,GAASM,KAAI,SAACC,GAAD,OACxB,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,KAEbC,QAAS,WACPX,EAAgBM,IANpB,mBASMA,IARCA,S,gBCVA,SAASM,EAAT,GAIX,IAHFb,EAGC,EAHDA,QAGC,IAFDc,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,gCACGC,EAAiBhB,GAClB,oBAAGS,UAAWC,IAAEO,OAAhB,oBAAgCH,KAEhC,oBAAGL,UAAWC,IAAEO,OAAhB,gCAA4CF,EAA5C,UAKN,IAAMC,EAAmB,SAAUhB,GAGjC,OAAOI,OAAOC,KAAKL,GAASM,KAAI,SAACC,GAAD,OAC9B,oBAAGE,UAAWC,IAAEQ,MAAhB,UACGX,EADH,KACUP,EAAQO,KADUA,OCrBjB,SAASY,EAAT,GAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACrD,OAAO,8BAAMA,I,ICMTC,E,4MACJC,MAAQ,CAAEC,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCC,YAAc,SAAClB,GACb,EAAKmB,UAAS,SAACC,GAAD,sBAAmBpB,EAAOoB,EAAUpB,GAAQ,MAC1DN,QAAQC,IAAI,CAACK,K,EAGfqB,mBAAqB,WAGnB,OAAOzB,OAAO0B,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAOC,IAAQ,I,EAI1EC,gCAAkC,WAChC,IAAMpB,EAAQ,EAAKe,qBACnB,OAAOf,EAAQ,EAAIqB,KAAKC,MAAO,EAAKd,MAAMC,KAAOT,EAAS,KAAO,G,4CAEnE,WACE,IAAMA,EAAQuB,KAAKR,qBACnB,OACE,qCACE,cAAC,EAAD,CAAShC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASqC,KAAKf,MACdrB,gBAAiBoC,KAAKX,gBAG1B,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACGiB,EAAQ,EACP,cAACD,EAAD,CACEb,QAASqC,KAAKf,MACdR,MAAOA,EACPC,mBAAoBsB,KAAKH,oCAG3B,cAACf,EAAD,CAAcC,QAAQ,+B,GArChBkB,aA4CHjB,IC9CfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,4B,kBCA9DD,EAAOC,QAAU,CAAC,KAAO,iC","file":"static/js/main.ab8a77eb.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title = \"\", children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n\r\n// class Section extends Component {\r\n//   static defaultProps = { title: \"\" };\r\n//   static propTypes = {\r\n//     title: PropTypes.string,\r\n//   };\r\n\r\n//   render() {\r\n//     const title = this.props.title;\r\n//     return <section>{title && <h2>{title}</h2>}</section>;\r\n//   }\r\n// }\r\n\r\n// export default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.scss\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  console.log(\"options\", options); //options {good: 0, neutral: 0, bad: 0}\r\n  return (\r\n    <div>\r\n      {/* Object.keys() возвращает массив из собственных перечисляемых свойств переданного объекта */}\r\n      {/* options - чьи собственные перечисляемые свойства будут возвращены */}\r\n      {Object.keys(options).map((key) => (\r\n        <button\r\n          key={key}\r\n          type=\"button\"\r\n          className={s.item}\r\n          // при клике перезаписывает ко-во стейтов по каждому типу отдельно, основываясь на предыдущем ко-ве +1\r\n          onClick={() => {\r\n            onLeaveFeedback(key); //addFeedback\r\n          }}\r\n        >\r\n          {`${key}`}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.scss\";\r\nexport default function Statistics({\r\n  options,\r\n  total = 0,\r\n  positivePercentage = 0,\r\n}) {\r\n  return (\r\n    <div>\r\n      {renderStatistics(options)}\r\n      <p className={s.points}>Total: {total}</p>\r\n      {/* countPositiveFeedbackPercentage */}\r\n      <p className={s.points}>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst renderStatistics = function (options) {\r\n  /* Object.keys() возвращает массив из собственных перечисляемых свойств переданного объекта */\r\n  /* options - чьи собственные перечисляемые свойства будут возвращены */\r\n  return Object.keys(options).map((key) => (\r\n    <p className={s.point} key={key}>\r\n      {key}: {options[key]}\r\n    </p>\r\n  ));\r\n};\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","export default function Notification({ message = \"\" }) {\r\n  return <div>{message}</div>;\r\n}\r\n","import React, { Component } from \"react\";\n\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n  // фу-я которая плюсует по каждому типу стейта\n  addFeedback = (type) => {\n    this.setState((prevState) => ({ [type]: prevState[type] + 1 }));\n    console.log([type]); //['good']\n  };\n  // фу-я которая плюсует общее ко-во по все типах стейт, тотальное значение кликов по кнопках\n  countTotalFeedback = () => {\n    // Object.values возвращает массив значений перечисляемых свойств объекта\n    // reduce-возвращает сумму всех элементов в массиве.\n    return Object.values(this.state).reduce((acc, value) => (acc += value), 0);\n  };\n  // фу-я соотношения хороших стейтов от ощего количества стейтов\n  //Math.round возвращает число, округлённое к ближайшему целому.\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return total > 0 ? Math.round((this.state.good / total) * 100) : 0;\n  };\n  render() {\n    const total = this.countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              options={this.state}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"points\":\"Statistics_points__24Sj6\",\"point\":\"Statistics_point__14fzA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOptions_item__15mKA\"};"],"sourceRoot":""}